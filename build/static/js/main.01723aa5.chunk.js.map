{"version":3,"sources":["components/Person.js","components/Persons.js","components/Filter.js","components/Notification.js","components/PersonForm.js","services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["Person","person","deletePerson","name","number","onClick","id","Persons","persons","map","Filter","filter","handleOnChange","value","onChange","Notification","notification","message","type","className","PersonForm","values","handlers","handleSubmit","handleNameChange","handleNumberChange","onSubmit","baseUrl","axios","post","then","response","data","delete","put","App","useState","setPersons","setName","setNumber","search","setSearch","setNotification","useEffect","get","personsNames","shownPersons","toLowerCase","includes","e","newSearch","target","newNumber","newName","preventDefault","newPerson","window","confirm","find","personService","catch","p","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01723aa5.chunk.js","sourcesContent":["const Person = ({ person, deletePerson }) => (\n  <p>\n    {person.name} {person.number}\n    <button onClick={() => deletePerson(person.id)}>delete</button>\n  </p>\n);\n\nexport default Person;\n","import Person from \"./Person\";\n\nconst Persons = ({ persons, deletePerson }) => {\n  return persons.map((person) => (\n    <Person key={person.name} person={person} deletePerson={deletePerson} />\n  ));\n};\n\nexport default Persons;\n","const Filter = ({ filter, handleOnChange }) => {\n  return (\n    <label>\n      Filter shown with: <input value={filter} onChange={handleOnChange} />\n    </label>\n  );\n};\n\nexport default Filter;\n","const Notification = ({ notification }) => {\n  if (notification !== null) {\n    const { message, type } = notification;\n    return <p className={type}>{message}</p>;\n  }\n  return null;\n};\n\nexport default Notification;\n","const PersonForm = ({ values, handlers }) => {\n  const { name, number } = values;\n  const { handleSubmit, handleNameChange, handleNumberChange } = handlers;\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Add a new Person</h3>\n      <label>\n        Name: <input value={name} onChange={handleNameChange} />\n      </label>\n      <br />\n      <label>\n        Number: <input value={number} onChange={handleNumberChange} />\n      </label>\n      <button type=\"submit\">add</button>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst create = (person) => {\n  return axios.post(baseUrl, person).then((response) => response.data);\n};\n\nconst deletePerson = (id) => {\n  return axios.delete(`${baseUrl}/${id}`).then((response) => response.data);\n};\n\nconst update = (id, person) => {\n  return axios\n    .put(`${baseUrl}/${id}`, person)\n    .then((response) => response.data);\n};\n\nexport default { create, deletePerson, update };\n","import { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\nimport PersonForm from \"./components/PersonForm\";\nimport personService from \"./services/persons\";\n\nimport axios from \"axios\";\n\nfunction App() {\n  const [persons, setPersons] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    axios.get(\"/api/persons\").then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  const personsNames = persons.map((person) => person.name);\n  const shownPersons = search\n    ? persons.filter((person) => person.name.toLowerCase().includes(search))\n    : persons;\n\n  const handleNameChange = (e) => {\n    const newName = e.target.value;\n    setName(newName);\n  };\n\n  const handleNumberChange = (e) => {\n    const newNumber = e.target.value;\n    setNumber(newNumber);\n  };\n\n  const handleSearchChange = (e) => {\n    const newSearch = e.target.value;\n    setSearch(newSearch);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newPerson = {\n      name,\n      number,\n    };\n\n    if (personsNames.includes(name)) {\n      if (\n        window.confirm(\n          `${name} is already added to phonebook, replace the old number with the new one?`\n        )\n      ) {\n        const person = persons.find((person) => person.name === name);\n        personService\n          .update(person.id, newPerson)\n          .then((newPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id === newPerson.id ? newPerson : person\n              )\n            );\n            setNumber(\"\");\n            setName(\"\");\n            setNotification({\n              type: \"success\",\n              message: `Modified ${person.name}'s phone`,\n            });\n          })\n          .catch(() => {\n            setNotification({\n              type: \"error\",\n              message: `Failed to modify ${person.name}. Probably the person was already delted from server`,\n            });\n            setPersons(persons.filter((p) => p.id !== person.id));\n          });\n      }\n      return;\n    }\n\n    personService\n      .create(newPerson)\n      .then((newPerson) => {\n        setNotification({\n          type: \"success\",\n          message: `Added ${newPerson.name}`,\n        });\n        setPersons(persons.concat(newPerson));\n        setName(\"\");\n        setNumber(\"\");\n      })\n      .catch(() =>\n        setNotification({\n          type: \"error\",\n          message: `Failed to create ${newPerson}`,\n        })\n      );\n  };\n\n  const deletePerson = (id) => {\n    const person = persons.find((person) => person.id === id);\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .deletePerson(id)\n        .then(() => {\n          setNotification({\n            type: \"success\",\n            message: `Deleted ${person.name}!`,\n          });\n          setPersons(persons.filter((person) => person.id !== id));\n        })\n        .catch(() => {\n          setNotification({\n            type: \"error\",\n            message: `Failed to delete ${person.name}!`,\n          });\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter filter={search} handleOnChange={handleSearchChange} />\n      <PersonForm\n        values={{ name, number }}\n        handlers={{ handleNumberChange, handleNameChange, handleSubmit }}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={shownPersons} deletePerson={deletePerson} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}